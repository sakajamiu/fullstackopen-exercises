{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filter.js","service/phoneServer.js","components/Notification.js","App.js","index.js"],"names":["Person","person","deletePerson","className","name","phone","onClick","window","confirm","PersonForm","onChange1","onChange2","value1","value2","onSubmit","value","onChange","type","Filter","baseurl","axios","get","then","response","data","newPerson","post","id","put","delete","Notification","message","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showAll","setShowAll","filterValue","setFilterValue","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","phoneServer","initialPersonData","personToShow","filter","toLowerCase","includes","event","target","preventDefault","some","updatePerson","find","updateData","map","catch","error","setTimeout","alert","number","newpersonData","concat","deleteData","console","log","err","deletePersonData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd9020de.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Person =({person, deletePerson}) =>{\r\n     \r\n    const confirm = () =>{\r\n        if(window.confirm(`Delete ${person.name} ?`)){\r\n            deletePerson()\r\n        }\r\n    }\r\n\r\nreturn(\r\n\r\n    <p  className = 'contactDisplay'>  {person.name} : {person.phone} \r\n          <button onClick ={confirm}>delete</button>\r\n    </p>\r\n    \r\n\r\n)\r\n\r\n\r\n\r\n\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Person","import React from 'react'\r\n\r\n\r\nconst PersonForm = ({onChange1,onChange2,value1,value2,onSubmit}) =>{\r\n    \r\n \r\n    return(\r\n      <div>\r\n        <form onSubmit = {onSubmit}>  \r\n          <div>\r\n            name: <input value={value1} onChange = {onChange1}/>\r\n          </div>\r\n          <div>\r\n              phone: <input value={value2} onChange ={onChange2} type= 'number'/>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n       </form>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm","import  React from 'react'\r\n\r\n\r\nconst Filter = ({onChange})=>{\r\n\r\n\r\n    return(\r\n        <div>\r\n        filter shown with <input onChange ={onChange}/>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Filter","\r\nimport axios from 'axios'\r\nconst baseurl = '/api/persons'\r\n\r\nconst getAll = () =>{  \r\n    const request = axios.get(baseurl)\r\n    return request.then(response => response.data)\r\n\r\n}\r\nconst create = (newPerson) =>{\r\n   const request = axios.post(baseurl, newPerson)\r\n    return request.then(response => response.data)\r\n\r\n\r\n}\r\nconst update = (newPerson, id) =>{\r\n   const request = axios.put(`${baseurl}/${id}`, newPerson)\r\n   return request.then(response => response.data)\r\n\r\n}\r\nconst deleteData = (id) =>{\r\n    const request =axios.delete(`${baseurl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default{getAll, create,update,deleteData}","import React from 'react';\r\n\r\n\r\nconst Notification = ({message, type}) =>{\r\n    if (message === null){\r\n        return null\r\n    }\r\n    return(\r\n        <div className = {type}>\r\n          {message}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import React, { useState,useEffect } from 'react'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport phoneServer from './service/phoneServer'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [filterValue , setFilterValue] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState('')\n\n  \n  useEffect(() =>{\n    phoneServer.getAll()\n    .then(initialPersonData => setPersons(initialPersonData))\n  },[])\n  const personToShow = showAll ? persons : persons.filter(person => person.name.toLowerCase().includes(filterValue.toLowerCase()) || person.phone.includes(filterValue))\n\n\n  const addName = (event)=>{\n  \n    setNewName(event.target.value)\n\n  }\n\n  const addNumber = (event)=>{\n    setNewNumber(event.target.value)\n      \n  }\n\n  const addPerson = (event)=>{\n    event.preventDefault()\n    \n    \n    const newPerson = {\n      name:newName,\n      phone:newNumber\n  \n\n    }\n\n    if(persons.some(person=>person.name.toLowerCase() === newPerson.name.toLowerCase())){\n      if(window.confirm( \n        `${newName} is already in the phonebook, \n        do you want to replace the old number with a new one`\n        )){\n\n          const updatePerson = persons.find(person => person.name === newPerson.name)\n\n          phoneServer.update(newPerson, updatePerson.id)\n\n           .then(updateData =>\n            setPersons(persons.map(person => person.id !==updatePerson.id ? person: updateData)))\n            .catch(error=> {\n              setNotificationMessage(error.response.data)\n              setNotificationType('error')\n              setTimeout(() => {\n          \n                setNotificationMessage(null)\n          \n              }, 5000)\n            })\n        setNotificationMessage(`${newPerson.name} contact successfully update`)\n\n        setNotificationType('success')\n\n        setNewName('')\n\n        setNewNumber('')\n\n        setTimeout(() => {\n\n          setNotificationMessage(null)\n\n        }, 2000)\n\n      }\n    }\n    else if(persons.some(person=> person.phone === newPerson.phone)){\n\n      alert( `${newNumber} is already in the phonebook`  )\n\n    }\n    else if(newPerson.name === ''|| newPerson.number === ''){\n      alert('please fill all the details to add new number')\n    }\n    else{\n      \n      setNewName('')\n\n      setNewNumber('')\n\n      phoneServer\n        .create(newPerson)\n        .then(newpersonData=> setPersons(persons.concat(newpersonData)))\n        .catch(error=> {\n          setNotificationMessage(error.response.data)\n          setNotificationType('error')\n          setTimeout(() => {\n      \n            setNotificationMessage(null)\n      \n          }, 5000)\n        })\n\n      setNotificationMessage(`${newPerson.name} contact successfully added`)\n\n      setNotificationType('success')\n\n      setTimeout(() => {\n\n        setNotificationMessage(null)\n\n      }, 2000)\n\n      \n    \n\n    }\n\n  }\n  const filterPerson =(event)=>{\n\n    setShowAll(false)\n\n    setFilterValue(event.target.value)\n\n  }\n  const deletePersonData = (id) =>{\n\n    const deletePerson = persons.find( person => person.id === id)\n\n    phoneServer\n      .deleteData(id)\n\n      .then(deleteData => console.log(deleteData))\n\n      .catch(err =>{\n        \n          setNotificationMessage(`${deletePerson.name} details was already deleted from server`)\n\n          setNotificationType('error')\n\n          setTimeout(() => {\n\n            setNotificationMessage(null)\n\n          }, 5000)\n      })\n\n      setPersons(persons.filter(person => person.id !==id))\n\n      setNotificationMessage(`${deletePerson.name} details is deleted successfully`)\n\n      setNotificationType('success')\n\n      setTimeout(() => {\n\n        setNotificationMessage(null)\n\n      }, 2000)\n\n  }\n\n  return (\n    <div  className = 'app'>\n\n      <h2>Phonebook</h2>\n      \n      <Notification\n\n        message = {notificationMessage}\n        type = {notificationType}\n\n      />\n\n      <Filter onChange = {filterPerson}/>\n\n      <div>\n\n        <h2>add a New</h2>\n\n      </div>\n\n      <PersonForm \n\n        onChange1 = {addName} \n        onChange2 ={addNumber}\n        value1 ={newName}\n        value2 ={newNumber}\n        onSubmit = {addPerson}\n\n      />\n\n   \n      <h2>Numbers</h2>\n      {\n\n        personToShow.map(person =>\n\n          <Person\n\n            key = {person.id}\n            person ={person}\n            deletePerson = {()=> deletePersonData(person.id)}\n\n          />\n        )\n\n      }\n      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}